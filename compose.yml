services:
  app:
    image: ${DOCKERHUB_USERNAME}/docker-vps-deploy:${IMAGE_TAG}
    restart: always
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:17-alpine
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: guestbook
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db-data:
